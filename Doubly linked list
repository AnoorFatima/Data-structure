#include<stdio.h>
#include<stdlib.h>
struct Node{
    struct Node* prev;
    int data;
    struct Node* next;
};
struct Node* head=NULL;
struct Node* createNode(int ele){
    struct Node* temp=(struct Node*)malloc(sizeof(struct Node));
    temp->data=ele;
    temp->prev=temp->next=NULL;
    return temp;
}
void insertNodeInBeg(int ele){
    struct Node* newNode = createNode(ele);
    if(head==NULL){
        head=newNode;
    }
    else{
        newNode->next=head;
        head->prev=newNode;
        head=newNode;
    }
}
void insertNodeAtEnd(int ele){
        struct Node* newNode = createNode(ele);
     if(head==NULL)
     head=newNode;
     else{
        struct Node* temp=head;
        while(temp->next!=NULL){
           temp=temp->next;
        }
        temp->next=newNode;
        newNode->prev=temp;
     }
     printf("Node Inserted !!!\n");
     }
     void insertNodeAtAnyPos(int ele,int pos){
        if(head==NULL)
         printf("List is empty !!!\n");
        else if(pos==1){
         insertNodeInBeg(ele);
        }
      else{
         struct Node* newNode = createNode(ele);
         struct Node* temp=head;
         int i=1;
         while(i<pos && temp->next !=NULL){
            temp=temp->next;
            i++;
         }
         if(temp->next !=NULL && pos>0){
            newNode->next=temp;
            newNode->prev=temp->prev;
            temp->prev->next=newNode;
            temp->prev=newNode;
            printf("Node Inserted !!!!\n");
         }
         else{
             printf("Invalid Position !!!!\n");
         }
        }
      }
int main(){
    while(1){
        printf("------ Doubly Linked List -------\n");
        printf("1. Insert node in beginging.\n");
        printf("2. Insert node at end.\n");
        printf("3 .Insert node at any position.\n");
        printf("4. Delete a node from beginging.\n");
        printf("5. Delete a node from end.\n");
        printf("6. Delete a node from any position.\n");
        printf("7. Search element in a list.\n");
        printf("7. Display list.\n");
        printf("9. Exit list.\n");
        int choice;
        printf ("Enter choice: ");
        scanf("%d",&choice);
        switch(choice){
            case 1:
            break;
            case 2:
            break;
            case 3:
            break;
            case 4:
            break;
            case 5:
            break;
            case 6:
            break;
            case 7:
            break;
            case 8:
            break;
            case 9:
            break;
        }
    }
    return 0;
}
