/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
 int countNodes( struct ListNode* head){
    if(head==NULL)
        return 0;
    else{
        struct ListNode*temp=head;/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
 int countNodes( struct ListNode* head){
    if(head==NULL)
        return 0;
    else{
        struct ListNode*temp=head;
         int i=0;
        while(temp!=NULL){
         i++;
         temp=temp->next;
    }
    return i;
 }
 }
struct ListNode* deleteMiddle(struct ListNode* head){
    int size = countNodes(head);
    int middle=size/2;
    if(middle==0)
        return NULL;
    else{
        struct ListNode*temp=head;
        int i=1;
        while(i<middle && temp->next !=NULL){
            i++;
            temp=temp->next;
        }
        if(temp->next!=NULL){
            temp->next=temp->next->next;
        }
        return head;
}
}
         int i=0;
        while(temp!=NULL){
         i++;
         temp=temp->next;
    }
    return i;
 }
 }
struct ListNode* deleteMiddle(struct ListNode* head){
    int size = countNodes(head);
    int middle=size/2;
    if(middle==0)
        return NULL;
    else{
        struct ListNode*temp=head;
        int i=1;
        while(i<middle && temp->next !=NULL){
            i++;
            temp=temp->next;
        }
        if(temp->next!=NULL){
            temp->next=temp->next->next;
        return head;
    }
}
}
